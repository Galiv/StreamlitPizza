import streamlit as st
from PIL import Image
import sys
sys.path.insert(1, 'C/Users/agali/source/repos/Streamlit/Streamlit')
import FoodBot



def make_order_func (good_ing, bad_ing):
    placeholder = st.empty()
    make_order = placeholder.button('‚úÖ–ì–æ—Ç–æ–≤–æ. –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üëç')
    if make_order:
        placeholder.empty()
        st.markdown(f'<p><strong>–í–∞—à–µ –∑–∞–º–æ–ª–µ–Ω–Ω—è –æ–ø—Ä–∞—Ü—å–æ–≤—É—î—Ç—å—Å—èüõí. –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ωüïî</strong></p>', unsafe_allow_html=True)
        # —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–≤—ñ–≤ –∂–æ–¥–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, —Ç–æ —à—É–∫–∞—î–º–æ –ø—ñ—Ü–∏ –ø—Ä–æ—Å—Ç–æ
        # –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ç–µ —á–∏ —ñ–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω—ñ 
        #if isinstance(good_ing, list) and isinstance(bad_ing, list):
            
        
        if (good_ing == '' and bad_ing == '') or (len(good_ing) == 0 and len(bad_ing) == 0):
            pandagood = set()
            pandabad = []
            order = FoodBot.getCheapestPizza(pandabad, pandagood, 1) #figure out logging
            link = order[0]
            price = order[1]
            image = order[2]
            st.write("–ó–∞ –≤–∞—à–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ –∑–Ω–∞–π–¥–µ–Ω–æ [–ø—ñ—Ü—É]({0}) –∑–∞ {1} –≥—Ä–Ω".format(link, price) )
            #order_image = Image.open(r'C:\Users\agali\source\repos\Streamlit\Streamlit\images\ing_order_pizza.png')
            #st.image(order_image)
            st.image(image)
        else:
            global good_ing_set
            if good_ing == '' or len(good_ing) == 0:
                good_ing_set = set()
            else:
                if isinstance(good_ing, list):
                    good_ing_set = set(good_ing) #check maybe something is wrong here
                else:
                    good_ing_set = set(good_ing.split(', '))

            global bad_ing_list
            if bad_ing == '' or len(bad_ing) == 0:
                bad_ing_list = []
            else:
                if isinstance(bad_ing, list):
                    bad_ing_list = bad_ing
                else:
                    bad_ing_list = bad_ing.split(', ')
        order = FoodBot.getCheapestPizza(bad_ing_list, good_ing_set, 1)        
        link = order[0]
        price = order[1]
        image = order[2]
        st.write("–ó–∞ –≤–∞—à–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ –∑–Ω–∞–π–¥–µ–Ω–æ [–ø—ñ—Ü—É]({0}) –∑–∞ {1} –≥—Ä–Ω".format(link, price) )
        #order_image = Image.open(r'C:\Users\agali\source\repos\Streamlit\Streamlit\images\ing_order_pizza.png')
        #st.image(order_image)
        st.image(image)

ingredients = ['—à–∏–Ω–∫–∞', 'c–∏—Ä –º–æ—Ü–∞—Ä–µ–ª–∞', '–∫–æ–≤–±–∞—Å–∞ –ø–∞–ø–µ—Ä–æ–Ω—ñ', '–ø–æ–º—ñ–¥–æ—Ä–∏ —á–µ—Ä—ñ', '–æ–ª–∏–≤–∫–∏', '–∫–æ—Ä–µ–π—Å—å–∫–∞ –º–æ—Ä–∫–≤–∞', '–±–∞–∑–∏–ª—ñ–∫', '–±–µ–∫–æ–Ω', '—Å–∞–ª—è–º—ñ', '–º–∏—Å–ª–∏–≤—Å—å–∫—ñ –∫–æ–≤–±–∞—Å–∫–∏', '–∫–∞–ª—å–º–∞—Ä', '–∫—Ä–µ–≤–µ—Ç–∫–∞', '–Ω–µ–æ–ø–æ–ª—ñ—Ç–∞–Ω—Å—å–∫–∏–π —Å–æ—É—Å', '–∞–Ω–∞–Ω–∞—Å', '–º–æ—Ü–∞—Ä–µ–ª–∞', '–æ–≥—ñ—Ä–æ–∫' , '–ø–µ—á–µ—Ä–∏—Ü—ñ', '–º–∞—Å–ª–∏–Ω–∏']


st.set_page_config(page_title="–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", page_icon="üõí")
st.markdown("# üçï–î–∞–≤–∞–π –∑–Ω–∞–π–¥–µ–º–æ –ø—ñ—Ü—É —Ä–∞–∑–æ–º")
st.sidebar.header("–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")

make_order_image = Image.open(r'C:\Users\agali\source\repos\Streamlit\Streamlit\images\order.jpg')
st.image(make_order_image, caption='Cheepest Online Pizza')
st.write(
    """–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –ø—ñ—Ü—É –Ω–∞ —Ç–≤—ñ–π —Å–º–∞–∫. 
    –î–ª—è —Ç–æ–≥–æ, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å–ø–æ—á–∞—Ç–∫—É –≤–∫–∞–∑–∞—Ç–∏
   "–ë–∞–∂–∞–Ω—ñ" —Ç–∞ "–ù–µ–±–∞–∂–∞–Ω—ñ" —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏."""
)

options = st.radio(
    '–ë–∞–∂–∞—î—Ç–µ –æ–±—Ä–∞—Ç–∏ —ñ–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫—É? –ß–∏ –º–æ–∂–ª–∏–≤–æ –≤–≤–µ—Å—Ç–∏ —Å–∞–º—ñ?',
    ('–í–≤–µ—Å—Ç–∏ —Å–∞–º–æ–º—É','–û–±—Ä–∞—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫—É'))

if options == '–í–≤–µ—Å—Ç–∏ —Å–∞–º–æ–º—É':
    st.markdown(f'<p>–ë—É–¥—å –ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –±–∞–∂–∞–Ω—ñ —Ç–∞ –Ω–µ–±–∞–∂–∞–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –∑–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–º —à–∞–±–ª–æ–Ω–æ–º:</p><p><strong>–±–∞–∂–∞–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:</strong> –º–æ—Ü–∞—Ä–µ–ª–∞, —à–∏–Ω–∫–∞</p><p><strong>–Ω–µ–±–∞–∂–∞–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:</strong> –∫–æ—Ä–µ–π—Å—å–∫–∞ –º–æ—Ä–∫–≤–∞, –±–∞–∑–∏–ª—ñ–∫</p><p>–ù–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –≤–∏ –Ω–µ —Ö–æ—á–µ—Ç–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏ –±–∞–∂–∞–Ω—ñ –∞–±–æ –Ω–µ–±–∞–∂–∞–Ω—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ —Ç–æ –ø–æ—Å—Ç–∞–≤—Ç–µ –ø—Ä–æ—á–µ—Ä–∫ &quot;-&quot;</p>', unsafe_allow_html=True)
    good_ing = st.text_input('–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏, —è–∫—ñ –í–∏ –ª—é–±–∏—Ç–µ','–º–æ—Ü–∞—Ä–µ–ª–∞, —à–∏–Ω–∫–∞')
    print(good_ing)
    bad_ing = st.text_input('–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏, —è–∫—ñ –í–∏ –Ω–µ –ª—é–±–∏—Ç–µ', '–∫–æ—Ä–µ–π—Å—å–∫–∞ –º–æ—Ä–∫–≤–∞, –±–∞–∑–∏–ª—ñ–∫')
    print(bad_ing)
    make_order_func(good_ing,bad_ing)

if options == '–û–±—Ä–∞—Ç–∏ –∑—ñ —Å–ø–∏—Å–∫—É':
    good_ing = st.multiselect(
        '–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏, —è–∫—ñ –í–∏ –ª—é–±–∏—Ç–µ',ingredients)
    bad_ing = st.multiselect(
        '–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏, —è–∫—ñ –í–∏ –Ω–µ –ª—é–±–∏—Ç–µ',ingredients)
    make_order_func(good_ing,bad_ing)




#for i in range(1, 101):
#    new_rows = last_rows[-1, :] + np.random.randn(5, 1).cumsum(axis=0)
#    status_text.text("%i%% Complete" % i)
#    chart.add_rows(new_rows)
#    progress_bar.progress(i)
#    last_rows = new_rows
#    time.sleep(0.05)

#progress_bar.empty()

# Streamlit widgets automatically run the script from top to bottom. Since
# this button is not connected to any other logic, it just causes a plain
# rerun.
#st.button("Re-run")